Stickman SamBy David WinegarI chose to make a scroller game because I was on the networking team for the RTS. We did not havenetworking integrated and because I did not work on other areas of the RTS, I did not have a goodenough understanding to make a game. In addition, our RTS platform was not completely working, and I wanted to make a scroller. I also used this as an opportunity to test the scroller engine.I chose to try to remake at least one level from the classic flash game Stickman Sam, specificallyPart 2. While the Stickman Sam series has tragically ended before completion, its main feature wasa stickman who walks around with a gun and tries to survive. I loved this game as a bored middleand high schooler because of its humor and good balance. I tried to remake part of Part 2 becauseit is one of the longer and better known parts of the series, and only second in quality to part3.Part 2 deals with Sam going through a dungeon and fighting various zombies and spiders. I includedone level.I was not very successful with this because the documentation was very poor. It certainly mademe aware of how poor the documentation was on our own game and how that would impact other peopletrying to make a game with the RTS engine.PROBLEMS1. In vooga.scroller.level_management.LevelFactory, method linkLevels, it is hardcoded for themario example game. No other game works because of this. I commented this out.2. Gravity constant is hardcoded in. I added another constructor. Also this class is ugly.3. The default behavior given in the example for collisions and gravity is bad. It always appliesa gravity vector which leads to the view vibrating. I fixed this using a boolean (not very elegant)4. it's not actually possible to create a gameElement with a given location after the game is initialized,at least thats what I gathered from the lack of documentation. I put a few hacky methods in thevooga.scroller code to fix this so I could use bullets.I sort of lost interest after fixing these bugs. In addition, a large number of public methodswere poorly documented to the point where I had no idea what they did. Overall, it was a difficultexperience. However, my game does (sort of) run.